// <auto-generated />
//
// To parse this JSON data, add NuGet 'Newtonsoft.Json' then do:
//
//    using ParkPlanner;
//
//    var facilities = Facilities.FromJson(jsonString);

namespace ParkPlanner
{
    using System;
    using System.Collections.Generic;

    using System.Globalization;
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;

    public partial class Facilities
    {
        [JsonProperty("FacilityID")]
        [JsonConverter(typeof(ParseStringConverter))]
        public long FacilityId { get; set; }

        [JsonProperty("LegacyFacilityID")]
        [JsonConverter(typeof(ParseStringConverter))]
        public long LegacyFacilityId { get; set; }

        [JsonProperty("OrgFacilityID")]
        public string OrgFacilityId { get; set; }

        [JsonProperty("ParentOrgID")]
        [JsonConverter(typeof(ParseStringConverter))]
        public long ParentOrgId { get; set; }

        [JsonProperty("ParentRecAreaID")]
        [JsonConverter(typeof(ParseStringConverter))]
        public long ParentRecAreaId { get; set; }

        [JsonProperty("FacilityName")]
        public string FacilityName { get; set; }

        [JsonProperty("FacilityDescription")]
        public string FacilityDescription { get; set; }

        [JsonProperty("FacilityTypeDescription")]
        public string FacilityTypeDescription { get; set; }

        [JsonProperty("FacilityUseFeeDescription")]
        public string FacilityUseFeeDescription { get; set; }

        [JsonProperty("FacilityDirections")]
        public string FacilityDirections { get; set; }

        [JsonProperty("FacilityPhone")]
        public string FacilityPhone { get; set; }

        [JsonProperty("FacilityEmail")]
        public string FacilityEmail { get; set; }

        [JsonProperty("FacilityReservationURL")]
        public string FacilityReservationUrl { get; set; }

        [JsonProperty("FacilityMapURL")]
        public string FacilityMapUrl { get; set; }

        [JsonProperty("FacilityAdaAccess")]
        public string FacilityAdaAccess { get; set; }

        [JsonProperty("GEOJSON")]
        public Geojson Geojson { get; set; }

        [JsonProperty("FacilityLongitude")]
        public double FacilityLongitude { get; set; }

        [JsonProperty("FacilityLatitude")]
        public double FacilityLatitude { get; set; }

        [JsonProperty("StayLimit")]
        public string StayLimit { get; set; }

        [JsonProperty("Keywords")]
        public string Keywords { get; set; }

        [JsonProperty("Reservable")]
        public bool Reservable { get; set; }

        [JsonProperty("Enabled")]
        public bool Enabled { get; set; }

        [JsonProperty("LastUpdatedDate")]
        public DateTimeOffset LastUpdatedDate { get; set; }

        [JsonProperty("CAMPSITE")]
        public List<Campsite> Campsite { get; set; }

        [JsonProperty("PERMITENTRANCE")]
        public List<Permitentrance> Permitentrance { get; set; }

        [JsonProperty("TOUR")]
        public List<Tour> Tour { get; set; }

        [JsonProperty("ORGANIZATION")]
        public List<Organization> Organization { get; set; }

        [JsonProperty("RECAREA")]
        public List<Recarea> Recarea { get; set; }

        [JsonProperty("FACILITYADDRESS")]
        public List<Facilityaddress> Facilityaddress { get; set; }

        [JsonProperty("ACTIVITY")]
        public List<Activity> Activity { get; set; }

        [JsonProperty("EVENT")]
        public List<Event> Event { get; set; }

        [JsonProperty("LINK")]
        public List<Link> Link { get; set; }

        [JsonProperty("MEDIA")]
        public List<Media> Media { get; set; }
    }

    public partial class Activity
    {
        [JsonProperty("ActivityID")]
        public string ActivityId { get; set; }

        [JsonProperty("FacilityID")]
        public string FacilityId { get; set; }

        [JsonProperty("ActivityName")]
        public string ActivityName { get; set; }

        [JsonProperty("FacilityActivityDescription")]
        public string FacilityActivityDescription { get; set; }

        [JsonProperty("FacilityActivityFeeDescription")]
        public string FacilityActivityFeeDescription { get; set; }
    }

    public partial class Campsite
    {
        [JsonProperty("CampsiteID")]
        public string CampsiteId { get; set; }

        [JsonProperty("CampsiteName")]
        public string CampsiteName { get; set; }

        [JsonProperty("ResourceLink")]
        public string ResourceLink { get; set; }
    }

    public partial class Event
    {
        [JsonProperty("EventID")]
        public string EventId { get; set; }

        [JsonProperty("EventName")]
        public string EventName { get; set; }

        [JsonProperty("ResourceLink")]
        public string ResourceLink { get; set; }
    }

    public partial class Facilityaddress
    {
        [JsonProperty("FacilityAddressID")]
        [JsonConverter(typeof(ParseStringConverter))]
        public long FacilityAddressId { get; set; }

        [JsonProperty("FacilityID")]
        [JsonConverter(typeof(ParseStringConverter))]
        public long FacilityId { get; set; }

        [JsonProperty("FacilityAddressType")]
        public string FacilityAddressType { get; set; }

        [JsonProperty("FacilityStreetAddress1")]
        public string FacilityStreetAddress1 { get; set; }

        [JsonProperty("FacilityStreetAddress2")]
        public string FacilityStreetAddress2 { get; set; }

        [JsonProperty("FacilityStreetAddress3")]
        public string FacilityStreetAddress3 { get; set; }

        [JsonProperty("City")]
        public string City { get; set; }

        [JsonProperty("PostalCode")]
        public string PostalCode { get; set; }

        [JsonProperty("AddressStateCode")]
        public string AddressStateCode { get; set; }

        [JsonProperty("AddressCountryCode")]
        public string AddressCountryCode { get; set; }

        [JsonProperty("LastUpdatedDate")]
        public DateTimeOffset LastUpdatedDate { get; set; }
    }

    public partial class Geojson
    {
        [JsonProperty("TYPE")]
        public string Type { get; set; }

        [JsonProperty("COORDINATES")]
        public List<double> Coordinates { get; set; }
    }

    public partial class Link
    {
        [JsonProperty("EntityLinkID")]
        public string EntityLinkId { get; set; }

        [JsonProperty("LinkType")]
        public string LinkType { get; set; }

        [JsonProperty("EntityID")]
        public string EntityId { get; set; }

        [JsonProperty("EntityType")]
        public string EntityType { get; set; }

        [JsonProperty("Title")]
        public string Title { get; set; }

        [JsonProperty("Description")]
        public string Description { get; set; }

        [JsonProperty("URL")]
        public string Url { get; set; }
    }

    public partial class Media
    {
        [JsonProperty("EntityMediaID")]
        public string EntityMediaId { get; set; }

        [JsonProperty("MediaType")]
        public string MediaType { get; set; }

        [JsonProperty("EntityID")]
        public string EntityId { get; set; }

        [JsonProperty("EntityType")]
        public string EntityType { get; set; }

        [JsonProperty("Title")]
        public string Title { get; set; }

        [JsonProperty("Subtitle")]
        public string Subtitle { get; set; }

        [JsonProperty("Description")]
        public string Description { get; set; }

        [JsonProperty("EmbedCode")]
        public string EmbedCode { get; set; }

        [JsonProperty("Height")]
        public long Height { get; set; }

        [JsonProperty("Width")]
        public long Width { get; set; }

        [JsonProperty("IsPrimary")]
        public bool IsPrimary { get; set; }

        [JsonProperty("IsPreview")]
        public bool IsPreview { get; set; }

        [JsonProperty("IsGallery")]
        public bool IsGallery { get; set; }

        [JsonProperty("URL")]
        public string Url { get; set; }

        [JsonProperty("Credits")]
        public string Credits { get; set; }
    }

    public partial class Organization
    {
        [JsonProperty("OrgID")]
        [JsonConverter(typeof(ParseStringConverter))]
        public long OrgId { get; set; }

        [JsonProperty("OrgName")]
        public string OrgName { get; set; }

        [JsonProperty("OrgImageURL")]
        public string OrgImageUrl { get; set; }

        [JsonProperty("OrgURLText")]
        public string OrgUrlText { get; set; }

        [JsonProperty("OrgURLAddress")]
        public Uri OrgUrlAddress { get; set; }

        [JsonProperty("OrgType")]
        public string OrgType { get; set; }

        [JsonProperty("OrgAbbrevName")]
        public string OrgAbbrevName { get; set; }

        [JsonProperty("OrgJurisdictionType")]
        public string OrgJurisdictionType { get; set; }

        [JsonProperty("OrgParentID")]
        [JsonConverter(typeof(ParseStringConverter))]
        public long OrgParentId { get; set; }

        [JsonProperty("LastUpdatedDate")]
        public DateTimeOffset LastUpdatedDate { get; set; }
    }

    public partial class Permitentrance
    {
        [JsonProperty("PermitEntranceID")]
        public string PermitEntranceId { get; set; }

        [JsonProperty("PermitEntranceName")]
        public string PermitEntranceName { get; set; }

        [JsonProperty("ResourceLink")]
        public string ResourceLink { get; set; }
    }

    public partial class Recarea
    {
        [JsonProperty("RecAreaID")]
        [JsonConverter(typeof(ParseStringConverter))]
        public long RecAreaId { get; set; }

        [JsonProperty("RecAreaName")]
        public string RecAreaName { get; set; }

        [JsonProperty("ResourceLink")]
        public string ResourceLink { get; set; }
    }

    public partial class Tour
    {
        [JsonProperty("TourID")]
        public string TourId { get; set; }

        [JsonProperty("TourName")]
        public string TourName { get; set; }

        [JsonProperty("ResourceLink")]
        public string ResourceLink { get; set; }
    }

    public partial class Facilities
    {
        public static List<Facilities> FromJson(string json) => JsonConvert.DeserializeObject<List<Facilities>>(json, ParkPlanner.Converter.Settings);
    }

    public static class Serialize
    {
        public static string ToJson(this List<Facilities> self) => JsonConvert.SerializeObject(self, ParkPlanner.Converter.Settings);
    }

    internal static class Converter
    {
        public static readonly JsonSerializerSettings Settings = new JsonSerializerSettings
        {
            MetadataPropertyHandling = MetadataPropertyHandling.Ignore,
            DateParseHandling = DateParseHandling.None,
            Converters =
            {
                new IsoDateTimeConverter { DateTimeStyles = DateTimeStyles.AssumeUniversal }
            },
        };
    }

    internal class ParseStringConverter : JsonConverter
    {
        public override bool CanConvert(Type t) => t == typeof(long) || t == typeof(long?);

        public override object ReadJson(JsonReader reader, Type t, object existingValue, JsonSerializer serializer)
        {
            if (reader.TokenType == JsonToken.Null) return null;
            var value = serializer.Deserialize<string>(reader);
            long l;
            if (Int64.TryParse(value, out l))
            {
                return l;
            }
            throw new Exception("Cannot unmarshal type long");
        }

        public override void WriteJson(JsonWriter writer, object untypedValue, JsonSerializer serializer)
        {
            if (untypedValue == null)
            {
                serializer.Serialize(writer, null);
                return;
            }
            var value = (long)untypedValue;
            serializer.Serialize(writer, value.ToString());
            return;
        }

        public static readonly ParseStringConverter Singleton = new ParseStringConverter();
    }
}
